//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HP.HSP.UA3.Utilities.LoadTenantDb.ServiceService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddServiceCommand", Namespace="http://schemas.datacontract.org/2004/07/HP.HSP.UA3.Administration.BAS.TenantConfi" +
        "guration.Contracts.Commands")]
    [System.SerializableAttribute()]
    public partial class AddServiceCommand : HP.HSP.UA3.Core.BAS.CQRS.Base.Command, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HP.HSP.UA3.Utilities.LoadTenantDb.ServiceService.AddService AddServiceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HP.HSP.UA3.Utilities.LoadTenantDb.ServiceService.AddService AddService {
            get {
                return this.AddServiceField;
            }
            set {
                if ((object.ReferenceEquals(this.AddServiceField, value) != true)) {
                    this.AddServiceField = value;
                    this.RaisePropertyChanged("AddService");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddService", Namespace="http://schemas.datacontract.org/2004/07/HP.HSP.UA3.Administration.BAS.TenantConfi" +
        "guration.Contracts.Domain")]
    [System.SerializableAttribute()]
    public partial class AddService : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BaseUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefaultTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IocContainerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelItemKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperatorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecurityRightItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TenantModuleIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BaseUrl {
            get {
                return this.BaseUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseUrlField, value) != true)) {
                    this.BaseUrlField = value;
                    this.RaisePropertyChanged("BaseUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefaultText {
            get {
                return this.DefaultTextField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultTextField, value) != true)) {
                    this.DefaultTextField = value;
                    this.RaisePropertyChanged("DefaultText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IocContainer {
            get {
                return this.IocContainerField;
            }
            set {
                if ((object.ReferenceEquals(this.IocContainerField, value) != true)) {
                    this.IocContainerField = value;
                    this.RaisePropertyChanged("IocContainer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LabelItemKey {
            get {
                return this.LabelItemKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.LabelItemKeyField, value) != true)) {
                    this.LabelItemKeyField = value;
                    this.RaisePropertyChanged("LabelItemKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OperatorID {
            get {
                return this.OperatorIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OperatorIDField, value) != true)) {
                    this.OperatorIDField = value;
                    this.RaisePropertyChanged("OperatorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityRightItemId {
            get {
                return this.SecurityRightItemIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityRightItemIdField, value) != true)) {
                    this.SecurityRightItemIdField = value;
                    this.RaisePropertyChanged("SecurityRightItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceId {
            get {
                return this.ServiceIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceIdField, value) != true)) {
                    this.ServiceIdField = value;
                    this.RaisePropertyChanged("ServiceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TenantModuleId {
            get {
                return this.TenantModuleIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TenantModuleIdField, value) != true)) {
                    this.TenantModuleIdField = value;
                    this.RaisePropertyChanged("TenantModuleId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdateServiceCommand", Namespace="http://schemas.datacontract.org/2004/07/HP.HSP.UA3.Administration.BAS.TenantConfi" +
        "guration.Contracts.Commands")]
    [System.SerializableAttribute()]
    public partial class UpdateServiceCommand : HP.HSP.UA3.Core.BAS.CQRS.Base.Command, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HP.HSP.UA3.Utilities.LoadTenantDb.ServiceService.UpdateService UpdateServiceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HP.HSP.UA3.Utilities.LoadTenantDb.ServiceService.UpdateService UpdateService {
            get {
                return this.UpdateServiceField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdateServiceField, value) != true)) {
                    this.UpdateServiceField = value;
                    this.RaisePropertyChanged("UpdateService");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdateService", Namespace="http://schemas.datacontract.org/2004/07/HP.HSP.UA3.Administration.BAS.TenantConfi" +
        "guration.Contracts.Domain")]
    [System.SerializableAttribute()]
    public partial class UpdateService : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BaseUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefaultTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IocContainerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelItemKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperatorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecurityRightItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TenantModuleIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BaseUrl {
            get {
                return this.BaseUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseUrlField, value) != true)) {
                    this.BaseUrlField = value;
                    this.RaisePropertyChanged("BaseUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefaultText {
            get {
                return this.DefaultTextField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultTextField, value) != true)) {
                    this.DefaultTextField = value;
                    this.RaisePropertyChanged("DefaultText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IocContainer {
            get {
                return this.IocContainerField;
            }
            set {
                if ((object.ReferenceEquals(this.IocContainerField, value) != true)) {
                    this.IocContainerField = value;
                    this.RaisePropertyChanged("IocContainer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LabelItemKey {
            get {
                return this.LabelItemKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.LabelItemKeyField, value) != true)) {
                    this.LabelItemKeyField = value;
                    this.RaisePropertyChanged("LabelItemKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OperatorID {
            get {
                return this.OperatorIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OperatorIDField, value) != true)) {
                    this.OperatorIDField = value;
                    this.RaisePropertyChanged("OperatorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityRightItemId {
            get {
                return this.SecurityRightItemIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityRightItemIdField, value) != true)) {
                    this.SecurityRightItemIdField = value;
                    this.RaisePropertyChanged("SecurityRightItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceId {
            get {
                return this.ServiceIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceIdField, value) != true)) {
                    this.ServiceIdField = value;
                    this.RaisePropertyChanged("ServiceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TenantModuleId {
            get {
                return this.TenantModuleIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TenantModuleIdField, value) != true)) {
                    this.TenantModuleIdField = value;
                    this.RaisePropertyChanged("TenantModuleId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TenantConfigurationEvents", Namespace="http://schemas.datacontract.org/2004/07/HP.HSP.UA3.Administration.BAS.TenantConfi" +
        "guration.Contracts.Events")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HP.HSP.UA3.Utilities.LoadTenantDb.ServiceService.ServiceUpdated))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HP.HSP.UA3.Utilities.LoadTenantDb.ServiceService.ServiceAdded))]
    public partial class TenantConfigurationEvents : HP.HSP.UA3.Core.BAS.CQRS.Base.Event, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceUpdated", Namespace="http://schemas.datacontract.org/2004/07/HP.HSP.UA3.Administration.BAS.TenantConfi" +
        "guration.Contracts.Events")]
    [System.SerializableAttribute()]
    public partial class ServiceUpdated : HP.HSP.UA3.Utilities.LoadTenantDb.ServiceService.TenantConfigurationEvents {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceId {
            get {
                return this.ServiceIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceIdField, value) != true)) {
                    this.ServiceIdField = value;
                    this.RaisePropertyChanged("ServiceId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceAdded", Namespace="http://schemas.datacontract.org/2004/07/HP.HSP.UA3.Administration.BAS.TenantConfi" +
        "guration.Contracts.Events")]
    [System.SerializableAttribute()]
    public partial class ServiceAdded : HP.HSP.UA3.Utilities.LoadTenantDb.ServiceService.TenantConfigurationEvents {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceId {
            get {
                return this.ServiceIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceIdField, value) != true)) {
                    this.ServiceIdField = value;
                    this.RaisePropertyChanged("ServiceId");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceService.IServiceService")]
    public interface IServiceService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceService/AddService", ReplyAction="http://tempuri.org/IServiceService/AddServiceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(HP.HSP.UA3.Core.BAS.CQRS.Base.ServiceException), Action="http://tempuri.org/IServiceService/AddServiceServiceExceptionFault", Name="ServiceException", Namespace="http://schemas.datacontract.org/2004/07/HP.HSP.UA3.Core.BAS.CQRS.Base")]
        HP.HSP.UA3.Utilities.LoadTenantDb.ServiceService.ServiceAdded AddService(HP.HSP.UA3.Utilities.LoadTenantDb.ServiceService.AddServiceCommand command);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceService/AddService", ReplyAction="http://tempuri.org/IServiceService/AddServiceResponse")]
        System.Threading.Tasks.Task<HP.HSP.UA3.Utilities.LoadTenantDb.ServiceService.ServiceAdded> AddServiceAsync(HP.HSP.UA3.Utilities.LoadTenantDb.ServiceService.AddServiceCommand command);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceService/UpdateService", ReplyAction="http://tempuri.org/IServiceService/UpdateServiceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(HP.HSP.UA3.Core.BAS.CQRS.Base.ServiceException), Action="http://tempuri.org/IServiceService/UpdateServiceServiceExceptionFault", Name="ServiceException", Namespace="http://schemas.datacontract.org/2004/07/HP.HSP.UA3.Core.BAS.CQRS.Base")]
        HP.HSP.UA3.Utilities.LoadTenantDb.ServiceService.ServiceUpdated UpdateService(HP.HSP.UA3.Utilities.LoadTenantDb.ServiceService.UpdateServiceCommand command);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceService/UpdateService", ReplyAction="http://tempuri.org/IServiceService/UpdateServiceResponse")]
        System.Threading.Tasks.Task<HP.HSP.UA3.Utilities.LoadTenantDb.ServiceService.ServiceUpdated> UpdateServiceAsync(HP.HSP.UA3.Utilities.LoadTenantDb.ServiceService.UpdateServiceCommand command);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceServiceChannel : HP.HSP.UA3.Utilities.LoadTenantDb.ServiceService.IServiceService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceServiceClient : System.ServiceModel.ClientBase<HP.HSP.UA3.Utilities.LoadTenantDb.ServiceService.IServiceService>, HP.HSP.UA3.Utilities.LoadTenantDb.ServiceService.IServiceService {
        
        public ServiceServiceClient() {
        }
        
        public ServiceServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public HP.HSP.UA3.Utilities.LoadTenantDb.ServiceService.ServiceAdded AddService(HP.HSP.UA3.Utilities.LoadTenantDb.ServiceService.AddServiceCommand command) {
            return base.Channel.AddService(command);
        }
        
        public System.Threading.Tasks.Task<HP.HSP.UA3.Utilities.LoadTenantDb.ServiceService.ServiceAdded> AddServiceAsync(HP.HSP.UA3.Utilities.LoadTenantDb.ServiceService.AddServiceCommand command) {
            return base.Channel.AddServiceAsync(command);
        }
        
        public HP.HSP.UA3.Utilities.LoadTenantDb.ServiceService.ServiceUpdated UpdateService(HP.HSP.UA3.Utilities.LoadTenantDb.ServiceService.UpdateServiceCommand command) {
            return base.Channel.UpdateService(command);
        }
        
        public System.Threading.Tasks.Task<HP.HSP.UA3.Utilities.LoadTenantDb.ServiceService.ServiceUpdated> UpdateServiceAsync(HP.HSP.UA3.Utilities.LoadTenantDb.ServiceService.UpdateServiceCommand command) {
            return base.Channel.UpdateServiceAsync(command);
        }
    }
}
