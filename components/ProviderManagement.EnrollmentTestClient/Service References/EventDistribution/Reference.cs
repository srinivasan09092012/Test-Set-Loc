//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProviderManagement.EnrollmentTestClient.EventDistribution {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EventMessage", Namespace="http://schemas.datacontract.org/2004/07/HP.HSP.UA3.Eventing")]
    [System.SerializableAttribute()]
    public partial class EventMessage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AggregateRootIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AggregateRootTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommitIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorrelationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EventNamespaceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] EventPayLoadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EventTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SequenceNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TenantIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AggregateRootID {
            get {
                return this.AggregateRootIDField;
            }
            set {
                if ((object.ReferenceEquals(this.AggregateRootIDField, value) != true)) {
                    this.AggregateRootIDField = value;
                    this.RaisePropertyChanged("AggregateRootID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AggregateRootType {
            get {
                return this.AggregateRootTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.AggregateRootTypeField, value) != true)) {
                    this.AggregateRootTypeField = value;
                    this.RaisePropertyChanged("AggregateRootType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommitID {
            get {
                return this.CommitIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CommitIDField, value) != true)) {
                    this.CommitIDField = value;
                    this.RaisePropertyChanged("CommitID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorrelationID {
            get {
                return this.CorrelationIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CorrelationIDField, value) != true)) {
                    this.CorrelationIDField = value;
                    this.RaisePropertyChanged("CorrelationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EventNamespace {
            get {
                return this.EventNamespaceField;
            }
            set {
                if ((object.ReferenceEquals(this.EventNamespaceField, value) != true)) {
                    this.EventNamespaceField = value;
                    this.RaisePropertyChanged("EventNamespace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] EventPayLoad {
            get {
                return this.EventPayLoadField;
            }
            set {
                if ((object.ReferenceEquals(this.EventPayLoadField, value) != true)) {
                    this.EventPayLoadField = value;
                    this.RaisePropertyChanged("EventPayLoad");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EventType {
            get {
                return this.EventTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.EventTypeField, value) != true)) {
                    this.EventTypeField = value;
                    this.RaisePropertyChanged("EventType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SequenceNumber {
            get {
                return this.SequenceNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SequenceNumberField, value) != true)) {
                    this.SequenceNumberField = value;
                    this.RaisePropertyChanged("SequenceNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TenantID {
            get {
                return this.TenantIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TenantIDField, value) != true)) {
                    this.TenantIDField = value;
                    this.RaisePropertyChanged("TenantID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Version {
            get {
                return this.VersionField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionField, value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="HP.HSP.UA3.Eventing", ConfigurationName="EventDistribution.IEventDistribution")]
    public interface IEventDistribution {
        
        [System.ServiceModel.OperationContractAttribute(Action="HP.HSP.UA3.Eventing/IEventDistribution/ProcessEvent", ReplyAction="HP.HSP.UA3.Eventing/IEventDistribution/ProcessEventResponse")]
        void ProcessEvent(ProviderManagement.EnrollmentTestClient.EventDistribution.EventMessage @event);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEventDistributionChannel : ProviderManagement.EnrollmentTestClient.EventDistribution.IEventDistribution, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EventDistributionClient : System.ServiceModel.ClientBase<ProviderManagement.EnrollmentTestClient.EventDistribution.IEventDistribution>, ProviderManagement.EnrollmentTestClient.EventDistribution.IEventDistribution {
        
        public EventDistributionClient() {
        }
        
        public EventDistributionClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EventDistributionClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EventDistributionClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EventDistributionClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void ProcessEvent(ProviderManagement.EnrollmentTestClient.EventDistribution.EventMessage @event) {
            base.Channel.ProcessEvent(@event);
        }
    }
}
